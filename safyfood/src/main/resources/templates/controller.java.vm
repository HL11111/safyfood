package ${package.Controller};

import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import org.springframework.web.bind.annotation.*;
import javax.annotation.Resource;
import java.util.List;

import ${package.Service}.${table.serviceName};
import ${package.Entity}.${pojo};

#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.pojoPath}#end")
#if(${kotlin})
        class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
    #if(${superControllerClass})
            public class ${table.controllerName} extends ${superControllerClass} {
    #else
            public class ${table.controllerName} {
    #end

        @Resource
        private ${table.serviceName} ${table.pojoPath}Service;

        @PostMapping
        public Boolean save(@RequestBody ${pojo} ${table.pojoPath}) {
            return ${table.pojoPath}Service.saveOrUpdate(${table.pojoPath});
        }

        @DeleteMapping("/{id}")
        public Boolean delete(@PathVariable Integer id) {
            return ${table.pojoPath}Service.removeById(id);
        }

        @GetMapping
        public List<${pojo}> findAll() {
            return ${table.pojoPath}Service.list();
        }

        @GetMapping("/{id}")
        public ${pojo} findOne(@PathVariable Integer id) {
            return ${table.pojoPath}Service.getById(id);
        }

        @GetMapping("/page")
        public Page<${pojo}> findPage(@RequestParam Integer pageNum,
                                        @RequestParam Integer pageSize) {
            QueryWrapper<${pojo}> queryWrapper = new QueryWrapper<>();
            queryWrapper.orderByDesc("id");
            return ${table.pojoPath}Service.page(new Page<>(pageNum, pageSize));
        }

}

#end